"""initial

Revision ID: 1c27cafc5859
Revises: 
Create Date: 2024-11-19 19:16:25.477799

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1c27cafc5859'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('WATCHING', 'COMPLETED', 'DROPPPED', 'PLANNING', name='watchingstatus').create(op.get_bind())
    sa.Enum('AIRING', 'COMPLETE', name='airingstatus').create(op.get_bind())
    sa.Enum('TV', 'MOVIE', name='animetype').create(op.get_bind())
    op.create_table('anime',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name_en', sa.String(), nullable=True),
    sa.Column('type', postgresql.ENUM('TV', 'MOVIE', name='animetype', create_type=False), nullable=True),
    sa.Column('airing_status', postgresql.ENUM('AIRING', 'COMPLETE', name='airingstatus', create_type=False), nullable=True),
    sa.Column('airing_start', sa.Date(), nullable=True),
    sa.Column('airing_end', sa.Date(), nullable=True),
    sa.Column('name_jp', sa.String(), nullable=True),
    sa.Column('total_number_of_episodes', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('rating', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_anime')),
    sa.UniqueConstraint('name_en', name=op.f('uq_anime_name_en'))
    )
    op.create_table('genres',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_genres')),
    sa.UniqueConstraint('name', name=op.f('uq_genres_name'))
    )
    op.create_table('studios',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_studios')),
    sa.UniqueConstraint('name', name=op.f('uq_studios_name'))
    )
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('login', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    op.create_table('anime_genre',
    sa.Column('anime_id', sa.UUID(), nullable=False),
    sa.Column('genre_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['anime_id'], ['anime.id'], name=op.f('fk_anime_genre_anime_id_anime')),
    sa.ForeignKeyConstraint(['genre_id'], ['genres.id'], name=op.f('fk_anime_genre_genre_id_genres')),
    sa.PrimaryKeyConstraint('anime_id', 'genre_id', name=op.f('pk_anime_genre'))
    )
    op.create_table('anime_studio',
    sa.Column('anime_id', sa.UUID(), nullable=False),
    sa.Column('studio_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['anime_id'], ['anime.id'], name=op.f('fk_anime_studio_anime_id_anime')),
    sa.ForeignKeyConstraint(['studio_id'], ['studios.id'], name=op.f('fk_anime_studio_studio_id_studios')),
    sa.PrimaryKeyConstraint('anime_id', 'studio_id', name=op.f('pk_anime_studio'))
    )
    op.create_table('episodes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('aired_date', sa.Date(), nullable=True),
    sa.Column('anime_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['anime_id'], ['anime.id'], name=op.f('fk_episodes_anime_id_anime')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_episodes'))
    )
    op.create_table('franchises',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('anime_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['anime_id'], ['anime.id'], name=op.f('fk_franchises_anime_id_anime')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_franchises')),
    sa.UniqueConstraint('name', name=op.f('uq_franchises_name'))
    )
    op.create_table('watching_entry',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('status', postgresql.ENUM('WATCHING', 'COMPLETED', 'DROPPPED', 'PLANNING', name='watchingstatus', create_type=False), nullable=True),
    sa.Column('num_watched_episodes', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('anime_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['anime_id'], ['anime.id'], name=op.f('fk_watching_entry_anime_id_anime')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_watching_entry_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_watching_entry'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('watching_entry')
    op.drop_table('franchises')
    op.drop_table('episodes')
    op.drop_table('anime_studio')
    op.drop_table('anime_genre')
    op.drop_table('user')
    op.drop_table('studios')
    op.drop_table('genres')
    op.drop_table('anime')
    sa.Enum('TV', 'MOVIE', name='animetype').drop(op.get_bind())
    sa.Enum('AIRING', 'COMPLETE', name='airingstatus').drop(op.get_bind())
    sa.Enum('WATCHING', 'COMPLETED', 'DROPPPED', 'PLANNING', name='watchingstatus').drop(op.get_bind())
    # ### end Alembic commands ###
