[tool.poetry]
name = "anihub"
version = "0.1.0"
description = ""
authors = ["sny <127958265+kyofu95@users.noreply.github.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.111.1"
pydantic-settings = "^2.3.4"
sqlalchemy = "^2.0.31"
asyncpg = "^0.29.0"
alembic = "^1.13.2"
alembic-postgresql-enum = "^1.3.0"
pyjwt = "^2.8.0"
argon2-cffi = "^23.1.0"
uvicorn = {extras = ["standard"], version = "^0.32.0"}
fastapi-pagination = "^0.12.34"
asgi-correlation-id = "4.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
pytest-cov = "^5.0.0"
httpx = "^0.27.0"
black = "^24.4.2"
mypy = "^1.10.1"
isort = "^5.13.2"
aiosqlite = "^0.20.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.mypy]
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
check_untyped_defs = true
warn_return_any = true
exclude = [
    "tests"
]
plugins = [
    "pydantic.mypy"
]

[tool.isort]
profile = "black"
line_length = 120
src_paths = [
    "app",
    "tests"
]
combine_as_imports = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.pytest.ini_options]
pythonpath = [
    "."
]
testpaths = [
    "tests"
]

[tool.pylint.format]
max-line-length = 120
disable = "missing-module-docstring"
#omit tests
#ignore-patterns = "test_*.*?py"